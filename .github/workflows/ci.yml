<<<<<<< HEAD
# This file was autogenerated by create-github-actions-setup-for-ember-addons.
#
# You can upgrade the GitHub Actions workflow to the latest blueprints used
# by Create GitHub Actions setup for Ember Addons by running it again:
#
# - `yarn create github-actions-setup-for-ember-addons` if using yarn and
# - `npm init github-actions-setup-for-ember-addons` if using NPM.
#
# See https://github.com/jelhan/create-github-actions-setup-for-ember-addon for
# details.
#
# The following lines contain the configuration used in the last run. Please do
# not change them. Doing so could break upgrade flow.
#
#$ browsers:
#$   - chrome
#$ emberTryScenarios:
#$   - scenario: ember-lts-3.20
#$   - scenario: ember-lts-3.24
#$   - scenario: ember-release
#$   - scenario: ember-beta
#$   - scenario: ember-canary
#$   - scenario: ember-default-with-jquery
#$   - scenario: ember-classic
#$   - scenario: embroider-safe
#$   - scenario: embroider-optimized
#$ nodeVersion: 10.x
#$ packageManager: npm
#

=======
>>>>>>> fd2f1b0... v3.28.4...v4.1.0
name: CI

on:
  push:
    branches:
<<<<<<< HEAD
      - master
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - "12"
          - "14"
          - "16"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '${{ matrix.node }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{
          hashFiles('**/package-lock.json'
          ) }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: npm ci
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Lint
      run: npm run-script lint


  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]
        node:
          - "12"
          - "14"
          - "16"

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '${{ matrix.node }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{
          hashFiles('**/package-lock.json'
          ) }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: npm ci
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test
      run: npm run-script test:ember --launch ${{ matrix.browser }}


  floating-dependencies:
    name: Floating Dependencies
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]
        node:
          - "12"
          - "14"
          - "16"

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '${{ matrix.node }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-floating-deps
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: npm install --no-package-lock

    - name: Test
      run: npm run-script test:ember --launch ${{ matrix.browser }}


  try-scenarios:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: test

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario: [
          ember-lts-3.20,
          ember-lts-3.24,
          ember-release,
          ember-beta,
          ember-canary,
          embroider-safe,
          embroider-optimized
        ]
        node:
          - "12"
          - "14"
          - "16"

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '${{ matrix.node }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{
          hashFiles('**/package-lock.json'
          ) }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: npm ci
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test
      env:
        EMBER_TRY_SCENARIO: ${{ matrix.ember-try-scenario }}
      run: node_modules/.bin/ember try:one $EMBER_TRY_SCENARIO
=======
      - main
      - master
  pull_request: {}

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

jobs:
  test:
    name: "Tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Run Tests
        run: npm run test:ember

  floating:
    name: "Floating Dependencies"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
          cache: npm
      - name: Install Dependencies
        run: npm install --no-shrinkwrap
      - name: Run Tests
        run: npm run test:ember

  try-scenarios:
    name: ${{ matrix.try-scenario }}
    runs-on: ubuntu-latest
    needs: 'test'

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.24
          - ember-lts-3.28
          - ember-release
          - ember-beta
          - ember-canary
          - ember-classic
          - ember-default-with-jquery
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
>>>>>>> fd2f1b0... v3.28.4...v4.1.0
